# To install plugins after making changes: ctrl+b ctrl+I

set -g mouse on
set -g default-terminal "screen-256color"
set -ga terminal-overrides ',*256col*:Tc'
set -as terminal-overrides ',xterm*:sitm=\E[3m'
set -sg escape-time 10
set -g focus-events on
set -g set-clipboard on
# set-option -g default-shell _shell_

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# vim-style selection for copy paste. Pressing v or esc while in selection will clear
setw -g mode-keys vi

bind-key -T copy-mode-vi v if-shell -F '#{selection_present}' \
    'send-keys -X clear-selection' \
    'send-keys -X begin-selection'

bind-key -T copy-mode-vi V if-shell -F '#{selection_present}' \
    'send-keys -X clear-selection' \
    'send-keys -X select-line'

# Rectangle/block selection with toggle behavior
bind-key -T copy-mode-vi C-v if-shell -F '#{selection_present}' \
    'send-keys -X clear-selection' \
    'send-keys -X rectangle-toggle \; send-keys -X begin-selection'

# Yank/copy selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Enhanced Escape behavior:
# If selection exists: clear selection (stay in copy mode)
# If no selection: exit copy mode
bind-key -T copy-mode-vi Escape if-shell -F '#{selection_present}' \
    'send-keys -X clear-selection' \
    'send-keys -X cancel'


set -g pane-active-border-style fg='#b989e2'
set -g pane-border-style fg='#bbbbbb'

set -g status-bg '#b989e2'
set -g status-fg '#1e1e3f'
set -g message-command-style 'bg=#eba86a, fg=#1e1e3f'
set -g message-style 'bg=#eba86a, fg=#1e1e3f'
set -g mode-style bg='#b989e2',fg='#1e1e3f'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'b0o/tmux-autoreload'
set -g @plugin 'ofirgall/tmux-window-name'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @plugin 'jaclu/tmux-menus'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_with_mouse on
set -g @plugin 'sainnhe/tmux-fzf'
# set -g @plugin 'christoomey/vim-tmux-navigator'

# Smart pane switching with awareness of Vim splits and no wrapping
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'if-shell "[ #{pane_at_left} -eq 0 ]" "select-pane -L"'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'if-shell "[ #{pane_at_bottom} -eq 0 ]" "select-pane -D"'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'if-shell "[ #{pane_at_top} -eq 0 ]" "select-pane -U"'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'if-shell "[ #{pane_at_right} -eq 0 ]" "select-pane -R"'

# Status bar stuff
# set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'tmux-plugins/tmux-net-speed'

# set -g @cpu_low_bg_color '#[bg=#b989e2]' # background color when cpu is low
# set -g @cpu_medium_bg_color '#[bg=#b989e2]' # background color when cpu is medium
# set -g @cpu_high_bg_color '#[bg=#b989e2]' # background color when cpu is high
set -g status-right-length 100
# set -g status-right '| #{net_speed} | #{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M  '
# set -g status-right '| #{net_speed} | #($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --colors --powerline-right --interval 2)| %a %h-%d %H:%M  '
set -g status-right '| #{net_speed} | #($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --interval 2)| %a %h-%d %H:%M  '
set -g status-left-length 100
set -g status-left '| Ctrl+b \ To Open Menu | Windows: #{s}'




# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

